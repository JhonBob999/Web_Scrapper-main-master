# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui/scanner_ui/certificate_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_certificateWindows(object):
    def setupUi(self, certificateWindows):
        certificateWindows.setObjectName("certificateWindows")
        certificateWindows.setWindowModality(QtCore.Qt.NonModal)
        certificateWindows.setEnabled(True)
        certificateWindows.resize(1278, 801)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(certificateWindows.sizePolicy().hasHeightForWidth())
        certificateWindows.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Nimbus Mono PS [urw]")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        certificateWindows.setFont(font)
        certificateWindows.setStyleSheet("QMainWindow {\n"
"    background-color: #f0f0f0; /* Светлый фон */\n"
"    font-family: \"Nimbus Mono PS [urw]\";\n"
"    font-size: 12pt;\n"
"    font-weight: bold;\n"
"}\n"
"")
        self.centralwidget = QtWidgets.QWidget(certificateWindows)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.labelCert = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Nimbus Mono PS [urw]")
        font.setPointSize(18)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.labelCert.setFont(font)
        self.labelCert.setStyleSheet("QLabel {\n"
"    font-family: \"Nimbus Mono PS [urw]\";\n"
"    font-size: 18pt;\n"
"    font-weight: bold;\n"
"    color: #333333; /* Тёмно-серый текст */\n"
"    background-color: transparent; /* Прозрачный фон */\n"
"}\n"
"")
        self.labelCert.setObjectName("labelCert")
        self.gridLayout.addWidget(self.labelCert, 0, 0, 1, 1)
        self.pushButtonScanStop = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Nimbus Mono PS [urw]")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.pushButtonScanStop.setFont(font)
        self.pushButtonScanStop.setStyleSheet("QPushButton#pushButtonScanStop {\n"
"    font-family: \"Nimbus Mono PS [urw]\";\n"
"    font-size: 13pt;\n"
"    font-weight: bold;\n"
"    background-color: #cc0000; /* Красный фон */\n"
"    color: white; /* Белый текст */\n"
"    border: 2px solid #990000; /* Тёмно-красная рамка */\n"
"    border-radius: 5px; /* Скруглённые углы */\n"
"    padding: 5px;\n"
"}\n"
"QPushButton#pushButtonScanStop:hover {\n"
"    background-color: #990000; /* Более тёмный красный при наведении */\n"
"}\n"
"QPushButton#pushButtonScanStop:pressed {\n"
"    background-color: #800000; /* Самый тёмный красный при нажатии */\n"
"}\n"
"")
        self.pushButtonScanStop.setObjectName("pushButtonScanStop")
        self.gridLayout.addWidget(self.pushButtonScanStop, 0, 1, 1, 1)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Nimbus Mono PS [urw]")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.tabWidget.setFont(font)
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setObjectName("tabWidget")
        self.TreeWidgetDomain = QtWidgets.QWidget()
        font = QtGui.QFont()
        font.setFamily("Nimbus Mono PS [urw]")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.TreeWidgetDomain.setFont(font)
        self.TreeWidgetDomain.setStyleSheet("")
        self.TreeWidgetDomain.setObjectName("TreeWidgetDomain")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.TreeWidgetDomain)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.pushButtonTreeDomain = QtWidgets.QPushButton(self.TreeWidgetDomain)
        self.pushButtonTreeDomain.setStyleSheet("QPushButton {\n"
"    font-family: \"Nimbus Mono PS [urw]\";\n"
"    font-size: 13pt;\n"
"    font-weight: bold;\n"
"    background-color: #007acc; /* Синий фон */\n"
"    color: white; /* Белый текст */\n"
"    border: 2px solid #005999; /* Тёмно-синяя рамка */\n"
"    border-radius: 5px; /* Скруглённые углы */\n"
"    padding: 5px;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #005999; /* Более тёмный синий при наведении */\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #004080; /* Самый тёмный синий при нажатии */\n"
"}\n"
"")
        self.pushButtonTreeDomain.setObjectName("pushButtonTreeDomain")
        self.verticalLayout_3.addWidget(self.pushButtonTreeDomain)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_3.addItem(spacerItem)
        self.treeWidgetDomain = QtWidgets.QTreeWidget(self.TreeWidgetDomain)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.treeWidgetDomain.sizePolicy().hasHeightForWidth())
        self.treeWidgetDomain.setSizePolicy(sizePolicy)
        self.treeWidgetDomain.setStyleSheet("QTreeWidget {\n"
"    font-family: \"Nimbus Mono PS [urw]\";\n"
"    font-size: 13pt;\n"
"    font-weight: bold;\n"
"    background-color: #ffffff; /* Белый фон */\n"
"    border: 1px solid #000000; /* Серая рамка */\n"
"    border-radius: 5px;\n"
"}\n"
"QTreeWidget::item {\n"
"    padding: 5px;\n"
"}\n"
"QTreeWidget::item:selected {\n"
"    background-color: #007acc; /* Синий фон для выделенного элемента */\n"
"    color: white; /* Белый текст для выделенного элемента */\n"
"}\n"
"")
        self.treeWidgetDomain.setObjectName("treeWidgetDomain")
        self.verticalLayout_3.addWidget(self.treeWidgetDomain)
        self.tabWidget.addTab(self.TreeWidgetDomain, "")
        self.Certificate_Parser = QtWidgets.QWidget()
        self.Certificate_Parser.setObjectName("Certificate_Parser")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.Certificate_Parser)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.pushButtonAllCert = QtWidgets.QPushButton(self.Certificate_Parser)
        self.pushButtonAllCert.setStyleSheet("QPushButton {\n"
"    font-family: \"Nimbus Mono PS [urw]\";\n"
"    font-size: 13pt;\n"
"    font-weight: bold;\n"
"    background-color: #007acc; /* Синий фон */\n"
"    color: white; /* Белый текст */\n"
"    border: 2px solid #005999; /* Тёмно-синяя рамка */\n"
"    border-radius: 5px; /* Скруглённые углы */\n"
"    padding: 5px;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #005999; /* Более тёмный синий при наведении */\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #004080; /* Самый тёмный синий при нажатии */\n"
"}\n"
"")
        self.pushButtonAllCert.setObjectName("pushButtonAllCert")
        self.verticalLayout_2.addWidget(self.pushButtonAllCert)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout_2.addItem(spacerItem1)
        self.treeWidgetFiles = QtWidgets.QTreeWidget(self.Certificate_Parser)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.treeWidgetFiles.sizePolicy().hasHeightForWidth())
        self.treeWidgetFiles.setSizePolicy(sizePolicy)
        self.treeWidgetFiles.setStyleSheet("QTreeWidget {\n"
"    font-family: \"Nimbus Mono PS [urw]\";\n"
"    font-size: 13pt;\n"
"    font-weight: bold;\n"
"    background-color: #ffffff; /* Белый фон */\n"
"    border: 1px solid #000000; /* Серая рамка */\n"
"    border-radius: 5px;\n"
"}\n"
"QTreeWidget::item {\n"
"    padding: 5px;\n"
"}\n"
"QTreeWidget::item:selected {\n"
"    background-color: #007acc; /* Синий фон для выделенного элемента */\n"
"    color: white; /* Белый текст для выделенного элемента */\n"
"}\n"
"")
        self.treeWidgetFiles.setObjectName("treeWidgetFiles")
        self.verticalLayout_2.addWidget(self.treeWidgetFiles)
        self.tabWidget.addTab(self.Certificate_Parser, "")
        self.gridLayout.addWidget(self.tabWidget, 0, 3, 2, 1)
        self.plainTextEditCertificateLogs = QtWidgets.QTextBrowser(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Nimbus Mono PS [urw]")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.plainTextEditCertificateLogs.setFont(font)
        self.plainTextEditCertificateLogs.setStyleSheet("QTextBrowser {\n"
"    font-family: \"Nimbus Mono PS [urw]\";\n"
"    font-size: 10pt;\n"
"    font-weight: bold;\n"
"    background-color: #ffffff; /* Белый фон */\n"
"    border: 1px solid #a0a0a0; /* Серая рамка */\n"
"    border-radius: 5px;\n"
"    color: black; /* Чёрный текст */\n"
"}\n"
"")
        self.plainTextEditCertificateLogs.setObjectName("plainTextEditCertificateLogs")
        self.gridLayout.addWidget(self.plainTextEditCertificateLogs, 1, 0, 1, 3)
        self.progressBarCertificateScan = QtWidgets.QProgressBar(self.centralwidget)
        self.progressBarCertificateScan.setEnabled(True)
        font = QtGui.QFont()
        font.setFamily("Nimbus Mono PS [urw]")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.progressBarCertificateScan.setFont(font)
        self.progressBarCertificateScan.setStyleSheet("QProgressBar {\n"
"    font-family: \"Nimbus Mono PS [urw]\";\n"
"    font-size: 12pt;\n"
"    font-weight: bold;\n"
"    color: black; /* Чёрный текст */\n"
"    background-color: #e0e0e0; /* Светло-серый фон */\n"
"    border: 2px solid #a0a0a0; /* Серая рамка */\n"
"    border-radius: 5px;\n"
"    text-align: center; /* Текст по центру */\n"
"}\n"
"QProgressBar::chunk {\n"
"    background-color: #007acc; /* Синий цвет прогресса */\n"
"    width: 20px; /* Ширина полосы */\n"
"}\n"
"")
        self.progressBarCertificateScan.setProperty("value", 0)
        self.progressBarCertificateScan.setObjectName("progressBarCertificateScan")
        self.gridLayout.addWidget(self.progressBarCertificateScan, 2, 0, 1, 3)
        self.pushButtonCleanLogs = QtWidgets.QPushButton(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("Nimbus Mono PS [urw]")
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.pushButtonCleanLogs.setFont(font)
        self.pushButtonCleanLogs.setStyleSheet("QPushButton {\n"
"    font-family: \"Nimbus Mono PS [urw]\";\n"
"    font-size: 13pt;\n"
"    font-weight: bold;\n"
"    background-color: #007acc; /* Синий фон */\n"
"    color: white; /* Белый текст */\n"
"    border: 2px solid #005999; /* Тёмно-синяя рамка */\n"
"    border-radius: 5px; /* Скруглённые углы */\n"
"    padding: 5px;\n"
"}\n"
"QPushButton:hover {\n"
"    background-color: #005999; /* Более тёмный синий при наведении */\n"
"}\n"
"QPushButton:pressed {\n"
"    background-color: #004080; /* Самый тёмный синий при нажатии */\n"
"}\n"
"")
        self.pushButtonCleanLogs.setObjectName("pushButtonCleanLogs")
        self.gridLayout.addWidget(self.pushButtonCleanLogs, 0, 2, 1, 1)
        certificateWindows.setCentralWidget(self.centralwidget)
        self.menuBar = QtWidgets.QMenuBar(certificateWindows)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1278, 24))
        self.menuBar.setObjectName("menuBar")
        self.menuConvertor = QtWidgets.QMenu(self.menuBar)
        self.menuConvertor.setObjectName("menuConvertor")
        certificateWindows.setMenuBar(self.menuBar)
        self.actionConvert_json = QtWidgets.QAction(certificateWindows)
        self.actionConvert_json.setObjectName("actionConvert_json")
        self.menuConvertor.addAction(self.actionConvert_json)
        self.menuBar.addAction(self.menuConvertor.menuAction())

        self.retranslateUi(certificateWindows)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(certificateWindows)

    def retranslateUi(self, certificateWindows):
        _translate = QtCore.QCoreApplication.translate
        certificateWindows.setWindowTitle(_translate("certificateWindows", "Certificate scan"))
        self.labelCert.setText(_translate("certificateWindows", "Certificate found"))
        self.pushButtonScanStop.setText(_translate("certificateWindows", "Stop Scan"))
        self.pushButtonTreeDomain.setText(_translate("certificateWindows", "Export domain,subdomain Json file\n"
"to TreeWidgetDomain"))
        self.treeWidgetDomain.headerItem().setText(0, _translate("certificateWindows", "Domain,subdomain JSON File"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.TreeWidgetDomain), _translate("certificateWindows", "Parse Certificate ID from Domain,Subdomain"))
        self.pushButtonAllCert.setText(_translate("certificateWindows", "Export Certificate ID Json file\n"
"to the TreeWidgetFiles"))
        self.treeWidgetFiles.headerItem().setText(0, _translate("certificateWindows", "Certificate ID File"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Certificate_Parser), _translate("certificateWindows", "Parse Certificate full info from Certificate ID"))
        self.pushButtonCleanLogs.setText(_translate("certificateWindows", "Clean logs"))
        self.menuConvertor.setTitle(_translate("certificateWindows", "Convertor"))
        self.actionConvert_json.setText(_translate("certificateWindows", "Convert json"))
